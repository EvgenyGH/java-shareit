CREATE TABLE IF NOT EXISTS users
(
    user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    varchar(50) NOT NULL,
    email   varchar(50) NOT NULL,
    CONSTRAINT users_unique_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS item_requests
(
    request_id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  varchar(200)             NOT NULL,
    requestor_id bigint                   NOT NULL,
    created      timestamp with time zone NOT NULL,

    CONSTRAINT fk_item_request FOREIGN KEY (requestor_id)
        REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items
(
    item_id     bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar(50)  NOT NULL,
    description varchar(200) NOT NULL,
    available   boolean      NOT NULL,
    owner_id    bigint       NOT NULL,
    request_id  bigint,

    CONSTRAINT fk_items_owner FOREIGN KEY (owner_id)
        REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_items_request FOREIGN KEY (request_id)
        REFERENCES item_requests (request_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings
(
    booking_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date timestamp with time zone NOT NULL,
    end_date   timestamp with time zone NOT NULL,
    item_id    bigint                   NOT NULL,
    booker_id  bigint                   NOT NULL,
    status     varchar(10)              NOT NULL,

    CONSTRAINT fk_bookings_booker FOREIGN KEY (booker_id)
        REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_bookings_item FOREIGN KEY (item_id)
        REFERENCES items (item_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text       varchar(200)             NOT NULL,
    item_id    bigint                   NOT NULL,
    author_id  bigint                   NOT NULL,
    created    timestamp with time zone NOT NULL,

    CONSTRAINT fk_comments_author FOREIGN KEY (author_id)
        REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_item FOREIGN KEY (item_id)
        REFERENCES items (item_id) ON DELETE CASCADE
);